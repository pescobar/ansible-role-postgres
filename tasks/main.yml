---
# tasks file for ansible-role-postgres

- name: Define var postgres_version_no_dots. e.g. if 9.6 >> 96
  set_fact:
    postgres_version_no_dots: "{{ postgres_version | regex_replace('\\.') }}"

- name: Install the postgres repos
  yum:
    name: "{{ postgres_yum_repos_rpm }}"
    state: present

- name: Install postgres rpms
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    "{{ postgres_packages }}"

- name: Copy the custom systemd script into place
  template:
    src: postgresql-9.6.service
    dest: "/usr/lib/systemd/system/postgresql-9.6.service"
    owner: root
    group: root
    mode: 0644
  when: not generic_postgresql

- name: Reload changes
  systemd:
    daemon_reload: yes
  when: not generic_postgresql

- name: Check if postgres has been initialized
  stat:
    path: "/var/lib/pgsql/{{ postgres_version }}/initdb.log"
  register: postgres_initialized

- name: Set data directory ownership
  file:
    path: /data/psql01
    state: directory
    owner: postgres
    group: postgres
    mode: 0700
  when: not generic_postgresql

- name: Initialize postgres
  command: "/usr/pgsql-{{ postgres_version }}/bin/postgresql{{ postgres_version_no_dots }}-setup initdb"
  environment:
    PGSETUP_INITDB_OPTIONS: '--pgdata=/data/psql01'
  when: (not postgres_initialized.stat.exists) and (not generic_postgresql)

- name: Initialize postgres
  command: "/usr/pgsql-{{ postgres_version }}/bin/postgresql{{ postgres_version_no_dots }}-setup initdb"
  when: (not postgres_initialized.stat.exists) and (generic_postgresql)

- name: copy /data/psql01/pg_hba.conf
  template:
    src: pg_hba.conf
    dest: "/data/psql01/pg_hba.conf"
    owner: postgres
    group: postgres
    mode: 0600
  when: not generic_postgresql

- name: Copy postgresql.conf
  template:
    src: postgresql.conf
    dest: "/data/psql01/postgresql.conf"
    owner: postgres
    group: postgres
    mode: 0600
  when: not generic_postgresql

- name: Start and enable the postgres service
  service:
    name: "postgresql-{{ postgres_version }}"
    state: started
    enabled: yes

- name: Install python-psycopg2 required for the ansible postgres modules
  yum:
    name: python-psycopg2
    state: installed

- name: Create a postgres db
  postgresql_db:
    name: "{{ postgres_db_to_create }}"
    encoding: UTF-8
    template: template0
  become: true
  become_user: postgres

- name: Create a postgres user
  postgresql_user:
    db: "{{ postgres_db_to_create }}"
    name: "{{ postgres_user_to_create }}"
    password: "{{ postgress_user_password }}"
    priv: ALL
  become: true
  become_user: postgres
